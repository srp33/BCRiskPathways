#!/bin/bash

source scripts/create_temp_files

###############################################################
# Parse "pathway" results
###############################################################

for comparison in 24vs35 2vs4 3vs5 2vs3 4vs5
do
  for pathway in `cat library/all_pathways.txt`
  do
    scripts/postprocess_parsePredictionFiles Pathways $pathway $comparison
  done
done

function parseLoocvPredictions {
  dataSet=$1

  for pathway in `cat library/all_pathways.txt`
  do
    inFile=ML-Flex2/Output/${dataSet}_Pathways_Experiment/Results/${dataSet}.$pathway/weka_svm_weights/r_svm_rbf/Predictions.txt
    outFile=ML-Flex_Results/CrossValidation/Pathways/$dataSet/Predictions/$pathway

    if [ ! -f $inFile ]
    then
      inFile=${inFile/\/weka_svm_weights/}
    fi

    if [ ! -f $outFile ]
    then
      echo $pathway
      mkdir -p `dirname $outFile`
      tail -n +2 $inFile > $outFile
    fi
  done
}

parseLoocvPredictions Visvader
parseLoocvPredictions Bellacosa

#################################################################
# Build prediction matrices
#################################################################

for comparison in 24vs35 2vs4 3vs5 2vs3 4vs5
do
  cohortDir=ML-Flex_Results/$comparison/Pathways/All/Predictions

  outFile=${cohortDir//\//__}__Predicted__Probabilities.txt
  outFile=${outFile/All__Predictions__/}
  outFile=${outFile/__/\/}
  outFile=${outFile//__/_}

  python code/BuildPredictionMatrix.py "$cohortDir/*" $outFile
done

#################################################################
# Calculate prediction metrics
#################################################################

function calculateMetricsForComparison {
  comparison=$1
  targetClass=$2

  rm -f /tmp/$comparison
  for f in ML-Flex_Results/$comparison/*/UtahTraining/Predictions/* ML-Flex_Results/$comparison/*/OntarioTesting/Predictions/* ML-Flex_Results/$comparison/*/AllTesting/Predictions/*
  do
    echo "scripts/postprocess_calculateMetrics $f $targetClass" >> /tmp/$comparison
  done

  chmod 777 /tmp/$comparison
  parallel --max-procs 50 -a /tmp/$comparison
}

function calculateMetrics {
  calculateMetricsForComparison 24vs35 BRCACancer
  calculateMetricsForComparison 2vs4 BRCAControl
  calculateMetricsForComparison 3vs5 BRCACancer
  calculateMetricsForComparison 2vs3 BRCAXCancer
  calculateMetricsForComparison 4vs5 BRCACancer

  for f in ML-Flex_Results/CrossValidation/Pathways/*/Predictions/*
  do
    echo scripts/postprocess_calculateMetrics $f BRCA >> $tmpFile1
  done

  chmod 777 $tmpFile1
  parallel --max-procs 50 -a $tmpFile1

  for f in ML-Flex_Results/24vs35/Pathways/AllTesting/Predictions/*
  do
    echo $f
    out24=${f/Predictions/ControlTest24}

    mkdir -p $(dirname $out24)

    Rscript --vanilla code/TestControls.R $f clinical/family.txt 2 4 $out24
  done

  python code/CombineScalarValues.py "ML-Flex_Results/24vs35/Pathways/AllTesting/ControlTest24/*" $tmpFile1
  python code/SortFileByExpression.py $tmpFile1 "float(x[1])" forward 0 ML-Flex_Results/24vs35/Pathways/AllTesting/ControlTest24.txt
}

calculateMetrics

function combineMetrics {
  for metric in AUCs PermutedAUCs
  do
    for descriptionDir in ML-Flex_Results/*/Pathways/*/$metric
    do
      outFile=$descriptionDir.txt
      
      if [ ! -f $outFile ]
      then
        echo $descriptionDir
        python code/CombineScalarValues.py "$descriptionDir/*" $outFile
      fi
    done
  done
}

combineMetrics

function summarizeMetrics {
  for comparison in 24vs35 2vs4 3vs5 2vs3 4vs5
  do
    summaryFile=Results/${comparison}_Summary.txt

    if [ ! -f $summaryFile ]
    then
      cp ML-Flex_Results/$comparison/Pathways/UtahTraining/AUCs.txt $tmpFile1
      cp ML-Flex_Results/$comparison/Pathways/OntarioTesting/AUCs.txt $tmpFile2
      cp ML-Flex_Results/$comparison/Pathways/UtahTraining/PermutedAUCs.txt $tmpFile3
      cp ML-Flex_Results/$comparison/Pathways/OntarioTesting/PermutedAUCs.txt $tmpFile4

      python code/SelectColumnsByName.py UtahExomeData/Output2/Pathway.MutFreq.Stats.Families${comparison}.txt "Row.names,Exact_P" $tmpFile5

      python code/MergeMatrixOnRowNames.py $tmpFile1 $tmpFile2 $tmpFile6 False
      python code/MergeMatrixOnRowNames.py $tmpFile6 $tmpFile3 $tmpFile7 False
      python code/MergeMatrixOnRowNames.py $tmpFile7 $tmpFile4 $tmpFile6 False
      python code/MergeMatrixOnRowNames.py $tmpFile6 $tmpFile5 $tmpFile7 False

      echo -e "Pathway\tUtah RNA AUC\tOntario RNA AUC\tUtah RNA p-value\tOntario RNA p-value\tUtah DNA p-value" > $tmpFile1
      cat $tmpFile1 $tmpFile7 > $summaryFile

      for i in {1..5}
      do
        python code/RoundMatrixColumn.py $summaryFile 1 $i 3 $summaryFile f
      done
    fi
  done

  summaryFile=Results/BreastTissue_Summary.txt

  if [ ! -f $summaryFile ]
  then
    cp ML-Flex_Results/CrossValidation/Pathways/Visvader/AUCs.txt $tmpFile1
    cp ML-Flex_Results/CrossValidation/Pathways/Bellacosa/AUCs.txt $tmpFile2
    cp ML-Flex_Results/CrossValidation/Pathways/Visvader/PermutedAUCs.txt $tmpFile3
    cp ML-Flex_Results/CrossValidation/Pathways/Bellacosa/PermutedAUCs.txt $tmpFile4

    python code/MergeMatrixOnRowNames.py $tmpFile1 $tmpFile2 $tmpFile5 False
    python code/MergeMatrixOnRowNames.py $tmpFile5 $tmpFile3 $tmpFile6 False
    python code/MergeMatrixOnRowNames.py $tmpFile6 $tmpFile4 $tmpFile5 False

    echo -e "Pathway\tLim, et al. AUC\tBellacosa, et al. AUC\tLim, et al. p-value\tBellacosa, et al. p-value" > $tmpFile1
    cat $tmpFile1 $tmpFile5 > $summaryFile

    for i in {1..4}
    do
      python code/RoundMatrixColumn.py $summaryFile 1 $i 3 $summaryFile f
    done
  fi
}

summarizeMetrics
exit

################################################
# I don't think we used any of the following...
################################################

function identifySelectedGenes2 {
  selectedGenesDir=ML-Flex_Results/24vs35/Pathways/UtahTraining/SelectedGenes
  mkdir -p $selectedGenesDir
  rm -f $selectedGenesDir/*

  for pathway in `cat library/all_pathways.txt`
  do
    echo $pathway
    numFeaturesAucFile=ML-Flex2/Output/utahontario1_Pathways_24vs35_Experiment/Results/utahontario1.batch.$pathway/weka_svm_weights/r_svm_rbf/Training_Data/Number_of_Features_vs_AUC.txt
    featureRanksFile=ML-Flex2/Output/utahontario1_Pathways_24vs35_Experiment/Results/utahontario1.batch.$pathway/weka_svm_weights/Feature_Ranks.txt

    if [ -f $numFeaturesAucFile ]
    then
      bestNumFeatures=`python code/ParseBestNumFeatures.py $numFeaturesAucFile`
     tail -n +3 $featureRanksFile > $tmpFile1
      head -n $bestNumFeatures $tmpFile1 > $tmpFile2
      python code/SelectColumns.py $tmpFile2 0 $selectedGenesDir/$pathway
    else
      cp -v genesets/$pathway.gene.ids.txt $selectedGenesDir/$pathway
    fi
  done

  python code/MergeGeneIDFilesIntoGmt.py "$selectedGenesDir/*" ML-Flex_Results/Pathways_24vs35_SelectedGenes.gmt
}

#identifySelectedGenes2

function buildGeneStatsFile {
  statsFile=Results/Gene.Expression.Stats.txt

  function calcStats {
    expressionFile=$1
    classesFile=$2
    targetClass=$3
    stat=$4
    outFile=$5

    Rscript --vanilla code/CompareValuesForTwoClasses.R $expressionFile $classesFile $targetClass Control $stat $outFile
  }

  mkdir $tmpDir/Stats
  calcStats matrices/utahontario1.batch.txt clinical/utah.24vs35.txt BRCACancer ttest $tmpDir/Stats/A &
  calcStats matrices/utahontario1.batch.txt clinical/ontario.24vs35.txt BRCACancer ttest $tmpDir/Stats/B &
  calcStats matrices/utahontario2.batch.txt clinical/ontario.24vs35.txt BRCACancer ttest $tmpDir/Stats/C &
  calcStats matrices/utahontario1.batch.txt clinical/utah.24vs35.txt BRCACancer fc $tmpDir/Stats/D &
  calcStats matrices/utahontario1.batch.txt clinical/ontario.24vs35.txt BRCACancer fc $tmpDir/Stats/E &
  calcStats matrices/utahontario2.batch.txt clinical/ontario.24vs35.txt BRCACancer fc $tmpDir/Stats/F &
  calcStats matrices/utahontario1.batch.txt clinical/utah.0124vs35.txt BRCACancer ttest $tmpDir/Stats/G &
  calcStats matrices/utahontario1.batch.txt clinical/ontario.0124vs35.txt BRCACancer ttest $tmpDir/Stats/H &
  calcStats matrices/utahontario2.batch.txt clinical/ontario.0124vs35.txt BRCACancer ttest $tmpDir/Stats/I &
  calcStats matrices/utahontario1.batch.txt clinical/utah.0124vs35.txt BRCACancer fc $tmpDir/Stats/J &
  calcStats matrices/utahontario1.batch.txt clinical/ontario.0124vs35.txt BRCACancer fc $tmpDir/Stats/K &
  calcStats matrices/utahontario2.batch.txt clinical/ontario.0124vs35.txt BRCACancer fc $tmpDir/Stats/L &
  calcStats matrices/Visvader.txt clinical/Visvader.Control_vs_BRCA.classes.txt BRCA ttest $tmpDir/Stats/M &
  calcStats matrices/Visvader.txt clinical/Visvader.Control_vs_BRCA.classes.txt BRCA fc $tmpDir/Stats/N &
  calcStats matrices/Bellacosa.txt clinical/Bellacosa.classes.txt BRCA ttest $tmpDir/Stats/O &
  calcStats matrices/Bellacosa.txt clinical/Bellacosa.classes.txt BRCA fc $tmpDir/Stats/P &
  wait

  function mergeStats {
    if [ ! -f $statsFile ]
    then
      cp $1 $statsFile
    else
      python code/Join.py $statsFile $1 0 0 NA $statsFile True
    fi
  }

  rm -f $statsFile
  for x in {A..P}
  do
    echo Merging $x
    mergeStats $tmpDir/Stats/$x
  done

  python code/AddDescriptionColumn.py $statsFile library/Entrez_gene_symbols.txt "[No Symbol]"
  python code/AddDescriptionColumn.py $statsFile library/Entrez_gene_names.txt "[No Name]"

  python code/SelectColumns.py $statsFile 0,-2,-1,1to-3 $tmpFile1
  echo -e "Entrez Gene ID\tGene Symbol\tGene Name\tUtah t-test 24vs35\tOntario1 t-test 24vs35\tOntario2 t-test 24vs35\tUtah Fold Change 24vs35\tOntario1 Fold Change 24vs35\tOntario2 Fold Change 24vs35\tUtah t-test 0124vs35\tOntario1 t-test 0124vs35\tOntario2 t-test 0124vs35\tUtah Fold Change 0124vs35\tOntario1 Fold Change 0124vs35\tOntario2 Fold Change 0124vs35\tVisvader t-test\tVisvader Fold Change\tBellacosa t-test\tBellacosa Fold Change" > $tmpFile2
  cat $tmpFile2 $tmpFile1 > $statsFile
}

#buildGeneStatsFile

function consensusGenes {
  comparison=$1
  ttIndex1=$2
  ttIndex2=$3
  ttIndex3=$4
  fcIndex1=$5
  fcIndex2=$6
  fcIndex3=$7

  statsFile=Results/Gene.Expression.Stats.txt
  consensusGenesFile=Results/Consensus.Genes.$comparison.txt
  consensusGenesIDFile=Results/Consensus.Genes.ID.$comparison.txt

  # Keep only genes that are expressed in the same direction across all three cohorts
  python code/FilterFile.py $statsFile "x[$fcIndex1] != 'NA' and x[$fcIndex2] != 'NA' and x[$fcIndex3] != 'NA' and ((float(x[$fcIndex1])>1.0 and float(x[$fcIndex2])>1.0 and float(x[$fcIndex3])>1.0) or (float(x[$fcIndex1])<1.0 and float(x[$fcIndex2])<1.0 and float(x[$fcIndex3])<1.0))" 1 $tmpFile1
  python code/SelectColumns.py $tmpFile1 0to14 $tmpFile2

  # Add absolute fold change columns
  python code/InsertMatrixColumnViaExpression.py $tmpFile2 "Utah Abs Fold Change" "math.fabs(float(x[$fcIndex1]) - 1)" $tmpFile2
  python code/InsertMatrixColumnViaExpression.py $tmpFile2 "Ontario1 Abs Fold Change" "math.fabs(float(x[$fcIndex2]) - 1)" $tmpFile2
  python code/InsertMatrixColumnViaExpression.py $tmpFile2 "Ontario2 Abs Fold Change" "math.fabs(float(x[$fcIndex3]) - 1)" $tmpFile2

  # Add rank columns
  python code/InsertRankColumn.py $tmpFile2 True $ttIndex1 False $tmpFile2
  python code/InsertRankColumn.py $tmpFile2 True $ttIndex2 False $tmpFile2
  python code/InsertRankColumn.py $tmpFile2 True $ttIndex3 False $tmpFile2
  python code/InsertRankColumn.py $tmpFile2 True 15 True $tmpFile2
  python code/InsertRankColumn.py $tmpFile2 True 16 True $tmpFile2
  python code/InsertRankColumn.py $tmpFile2 True 17 True $tmpFile2

  python code/SortFileByExpression.py $tmpFile2 "utilities.calculateMean([float(y) for y in x[18:]])" forward 1 $tmpFile1

  # Finalize consensus file
  python code/SelectColumns.py $tmpFile1 0to2 $consensusGenesFile
  python code/SelectColumns.py $consensusGenesFile 0 $tmpFile1
  tail -n +2 $tmpFile1 > $consensusGenesIDFile
}

#consensusGenes 24v35 3 4 5 6 7 8
#consensusGenes 0124v35 9 10 11 12 13 14

#python code/FilterFile.py Results/Gene.Expression.Stats.txt "x[12] != 'NA' and x[13] != 'NA' and x[14] != 'NA'" 1 $tmpFile2
#python code/InsertRankColumn.py $tmpFile2 True 12 True $tmpFile2
#python code/InsertRankColumn.py $tmpFile2 True 13 True $tmpFile2
#python code/InsertRankColumn.py $tmpFile2 True 14 True $tmpFile2
#python code/SortFileByExpression.py $tmpFile2 "utilities.calculateMean([float(y) for y in x[19:]])" forward 1 $tmpFile1
#python code/SelectColumns.py $tmpFile1 0 $tmpFile2
#tail -n +2 $tmpFile2 > $tmpFile1
#head -n 250 $tmpFile1 > Results/BCSP.Up.Gene.ID.0124vs35.txt
#python code/CreateGmtFileFromIDs.py Results/BCSP.Up.Gene.ID.0124vs35.txt Results/BCSP.Up.0124vs35.gmt

# Create expression file that includes all samples
#python code/SelectColumns.py clinical/classes.0124vs35.txt 0 $tmpFile2
#python code/TransposeData.py matrices/utahontario1.batch.txt $tmpFile3
#python code/FilterFileByColumnValues.py $tmpFile3 0 $tmpFile2 1 $tmpFile4
#python code/TransposeData.py $tmpFile4 $tmpFile5
#python code/SelectColumns.py clinical/ontario.0124vs35.txt 0 $tmpFile2
#python code/TransposeData.py matrices/utahontario2.batch.txt $tmpFile3
#python code/FilterFileByColumnValues.py $tmpFile3 0 $tmpFile2 1 $tmpFile4
#python code/TransposeData.py $tmpFile4 $tmpFile6
#python code/MergeMatrixOnRowNames.py $tmpFile5 $tmpFile6 matrices/utahontario.batch.txt
#python code/PrintMatrixDimensions.py matrices/utahontario.batch.txt
